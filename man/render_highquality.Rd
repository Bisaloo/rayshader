% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/render_highquality.R
\name{render_highquality}
\alias{render_highquality}
\title{Render High Quality}
\usage{
render_highquality(
  filename = NULL,
  light = TRUE,
  lightdirection = 315,
  lightaltitude = 45,
  lightsize = NULL,
  lightintensity = 500,
  lightcolor = "white",
  obj_material = diffuse(),
  cache_filename = NULL,
  width = NULL,
  height = NULL,
  title_text = NULL,
  title_offset = c(20, 20),
  title_color = "black",
  title_size = 30,
  title_font = "sans",
  title_bar_color = NULL,
  title_bar_alpha = 0.5,
  ground_material = diffuse(),
  ground_size = 1e+05,
  scene_elements = NULL,
  camera_location = NULL,
  camera_lookat = c(0, 0, 0),
  camera_interpolate = 1,
  clear = FALSE,
  print_scene_info = FALSE,
  ...
)
}
\arguments{
\item{filename}{Filename of saved image. If missing, will display to current device.}

\item{light}{Default \code{TRUE}. Whether there should be a light in the scene. If not, the scene will be lit with a bluish sky.}

\item{lightdirection}{Default \code{315}. Position of the light angle around the scene.
If this is a vector longer than one, multiple lights will be generated (using values from
\code{lightaltitude}, \code{lightintensity}, and \code{lightcolor})}

\item{lightaltitude}{Default \code{45}. Angle above the horizon that the light is located.
If this is a vector longer than one, multiple lights will be generated (using values from
\code{lightdirection}, \code{lightintensity}, and \code{lightcolor})}

\item{lightsize}{Default \code{NULL}. Radius of the light(s). Automatically chosen, but can be set here by the user.}

\item{lightintensity}{Default \code{500}. Intensity of the light.}

\item{lightcolor}{Default \code{white}. The color of the light.}

\item{obj_material}{Default \code{\link[rayrender:diffuse]{rayrender::diffuse()}}. The material properties of the object file.}

\item{cache_filename}{Name of temporary filename to store OBJ file, if the user does not want to rewrite the file each time.}

\item{width}{Defaults to the width of the rgl window. Width of the rendering.}

\item{height}{Defaults to the height of the rgl window. Height of the rendering.}

\item{title_text}{Default \code{NULL}. Text. Adds a title to the image, using magick::image_annotate.}

\item{title_offset}{Default \code{c(20,20)}. Distance from the top-left (default, \code{gravity} direction in
\code{\link[magick:image_annotate]{magick::image_annotate()}} corner to offset the title.}

\item{title_color}{Default \code{black}. Font color.}

\item{title_size}{Default \code{30}. Font size in pixels.}

\item{title_font}{Default \code{sans}. String with font family such as "sans", "mono", "serif", "Times", "Helvetica",
"Trebuchet", "Georgia", "Palatino" or "Comic Sans".}

\item{title_bar_color}{Default \code{NULL}. If a color, this will create a colored bar under the title.}

\item{title_bar_alpha}{Default \code{0.5}. Transparency of the title bar.}

\item{ground_material}{Default \link[rayrender:diffuse]{diffuse()}. Material defined by the rayrender material functions.}

\item{ground_size}{Default \code{100000}. The width of the plane representing the ground.}

\item{scene_elements}{Default \code{NULL}. Extra scene elements to add to the scene, created with rayrender.}

\item{camera_location}{Default \code{NULL}. Custom position of the camera. The \code{FOV}, \code{width}, and \code{height} arguments will still
be derived from the rgl window.}

\item{camera_lookat}{Default \code{NULL}. Custom point at which the camera is directed. The \code{FOV}, \code{width}, and \code{height} arguments will still
be derived from the rgl window.}

\item{camera_interpolate}{Default \code{c(0,0)}. Maximum \code{1}, minimum \code{0}. Sets the camera at a point between the \code{rgl} view and the \code{camera_location}
and \code{camera_lookat} vectors.}

\item{clear}{Default \code{FALSE}. If \code{TRUE}, the current \code{rgl} device will be cleared.}

\item{print_scene_info}{Default \code{FALSE}. If \code{TRUE}, it will print the position and lookat point of the camera.}

\item{...}{Additional parameters to pass to \code{\link[rayrender:render_scene]{rayrender::render_scene()}}}
}
\description{
Renders a raytraced version of the displayed rgl scene, using the \code{rayrender} package.
User can specify the light direction, intensity, and color, as well as specify the material of the
ground and add additional scene elements.
}
\examples{
#Render the volcano dataset using pathtracing
\donttest{
volcano \%>\%
 sphere_shade() \%>\%
 plot_3d(volcano,zscale = 2)
render_highquality()
}

#Change position of light
\donttest{
render_highquality(lightdirection = 45)
}

#Change vertical position of light
\donttest{
render_highquality(lightdirection = 45, lightaltitude=10)
}

#Change the ground material
\donttest{
render_highquality(lightdirection = 45, lightaltitude=60, 
                  ground_material = rayrender::diffuse(checkerperiod = 30, checkercolor="grey50"))
}

#Add three different color lights and a title
\donttest{
render_highquality(lightdirection = c(0,120,240), lightaltitude=45, 
                  lightcolor=c("red","green","blue"), title_text = "Red, Green, Blue",
                  title_bar_color="white", title_bar_alpha=0.8)
}

#Change the camera:
\donttest{
render_camera(theta=-45,phi=60,fov=60,zoom=0.8)
render_highquality(lightdirection = c(0), 
                  title_bar_color="white", title_bar_alpha=0.8)
}
#Add a shiny metal sphere
\donttest{
render_camera(theta=-45,phi=60,fov=60,zoom=0.8)
render_highquality(lightdirection = c(0,120,240), lightaltitude=45, 
                  lightcolor=c("red","green","blue"),
                  scene_elements = rayrender::sphere(z=-60,y=0,
                                                     radius=20,material=rayrender::metal()))
}

#Add a red light to the volcano and change the ambient light to dusk
\donttest{
render_camera(theta=45,phi=45)
render_highquality(lightdirection = c(240), lightaltitude=30, 
                  lightcolor=c("#5555ff"),
                  scene_elements = rayrender::sphere(z=0,y=15, x=-18, radius=5,
                                   material=rayrender::light(color="red",intensity=10)))
}
#Manually change the camera location and direction
\donttest{
render_camera(theta=45,phi=45,fov=90)
render_highquality(lightdirection = c(240), lightaltitude=30, lightcolor=c("#5555ff"), 
                  camera_location = c(50,10,10), camera_lookat = c(0,15,0), 
                  scene_elements = rayrender::sphere(z=0,y=15, x=-18, radius=5,
                                   material=rayrender::light(color="red",intensity=10)))
rgl::rgl.close()
}
}
